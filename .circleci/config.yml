version: 2.1
jobs:
  generate_scheme:
    docker:
      - image: chatwork/openapi2jsonschema:latest
    environment:
      - CIRCLECI_WORKSPACE: /root/project
    steps:
      - checkout
      - run:
          name: Generate scheme
          command: |
            ./build.sh
  mod:
    docker:
      - image: variantdev/mod:0.19.0
    environment:
      - CIRCLECI_WORKSPACE: /root/project
    steps:
      - checkout
      - run:
          name: Update dependencies
          command: |
            git config --global user.email "server_admin+cw-circleci@chatwork.com"
            git config --global user.name "CircleCI"
            mod up --build  --pull-request --base master --branch 'mod-up-{}' --title "update {{ .kubernetes.version }}" --skip-on-duplicate-pull-request-title
  merge:
    docker:
      - image: kinzal/pr:0.2.1
    steps:
      - run:
          name: Auto merge
          command: |
            /usr/local/bin/pr merge cw-ozaki/kubernetes-json-schema --with-statuses --with-checks \
              -l 'state == `"open"`' \
              -l 'base.ref == `"master"`' \
              -l 'starts_with(head.ref, `"mod-up-"`)' \
              -l 'user.login == `"cw-circleci"`' \
              -l 'length(statuses[?context == `"ci/circleci: test"` && state == `"success"`]) == `1`' 2> stderr

workflows:
  version: 2
  generate_schema:
    jobs:
      - generate_scheme:
          filters:
            branches:
              only:
                - /^mod-up-/
  update_dependecies:
    jobs:
      - mod
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
  auto_merge:
    jobs:
      - merge
    triggers:
      - schedule:
          cron: "0,10,20,30,40,50 * * * *"
          filters:
            branches:
              only:
                - master